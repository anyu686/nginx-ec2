# AWS playbook
---

- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - ./group_vars/etc/default.yml
  tasks:
    - name: Provisioning EC2 instances
      block:
      - name: Upload public key to AWS
        ec2_key:
          name: "{{ key_name }}"
           #key_material: "{{ lookup('file', '/Users/yu.an\ 1/.ssh/my_aws_1.pub') }}"
          key_material: "{{ lookup('file', '{{key_path}}') }}"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
      - name: Create security group
        ec2_group:
          name: "{{ sec_group }}"
          description: "Sec group for app {{ id }}"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          rules:
            - proto: tcp
              ports:
              - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port
            - proto: tcp
              ports:
              - 80 
              cidr_ip: 0.0.0.0/0
            - proto: icmp       
              from_port: 8 # icmp type, -1 = any type
              to_port:  -1 # icmp subtype, -1 = any subtype
              cidr_ip: 0.0.0.0/0
        register: result_sec_group
      - name: Provision instance(s)
        ec2:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          key_name: "{{ key_name }}"
          id: "{{ id }}"
          group_id: "{{ result_sec_group.group_id }}"
          image: "{{ image }}"
          instance_type: t2.micro
          region: "{{ region }}"
          wait: true
          count: 1
      tags: ['never', 'create_ec2']
    - name: Facts
      block:
      - name: Get instances facts
        ec2_instance_facts:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          region: "{{ region }}"
        register: result
      - name: Instances ID
        debug:
           msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public IP: {{ item.public_ip_address }}"
        loop: "{{ result.instances }}"
      tags: always



